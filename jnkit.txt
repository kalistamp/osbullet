#!/usr/bin/env python3

import requests
from bs4 import BeautifulSoup
import time
from datetime import datetime

class TextScraper:
    def __init__(self):
        self.base_url = "https://www.wantstobehired.com/"
        self.headers = {
            "User-Agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
        }
        self.total_pages = 94

    def get_page_content(self, page_num):
        url = f"{self.base_url}?page={page_num}"
        try:
            response = requests.get(url, headers=self.headers, timeout=30)
            response.raise_for_status()
            return response.text
        except Exception as e:
            print(f"\033[91mError fetching page {page_num}: {e}\033[0m")
            return None

    def extract_text(self, html_content):
        if not html_content:
            return ""
        soup = BeautifulSoup(html_content, 'html.parser')
        # Extract all text while preserving some structure
        text = soup.get_text(separator='\n', strip=True)
        return text

    def save_to_file(self, all_text):
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        filename = f"webpage_content_{timestamp}.txt"
        
        try:
            with open(filename, 'w', encoding='utf-8') as file:
                file.write(all_text)
            print(f"\n\033[92mData saved to {filename}\033[0m")
        except Exception as e:
            print(f"\033[91mError saving data: {e}\033[0m")

    def run(self):
        print("\033[94mStarting text extraction...\033[0m")
        all_text = ""
        
        for page in range(1, self.total_pages + 1):
            print(f"\nProcessing page {page}/{self.total_pages}")
            content = self.get_page_content(page)
            if content:
                page_text = self.extract_text(content)
                all_text += f"\n\n=== PAGE {page} ===\n\n{page_text}"
                print(f"Added content from page {page}")
                time.sleep(2)  # Be nice to the server
        
        print("\n\033[94mExtraction completed!\033[0m")
        self.save_to_file(all_text)

if __name__ == "__main__":
    print("\033[95m=== Webpage Text Scraper ===\033[0m")
    scraper = TextScraper()
    scraper.run()
