#!/usr/bin/env python3

from selenium import webdriver
from selenium.webdriver.firefox.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time
from datetime import datetime

def setup_driver():
    options = Options()
    options.add_argument('--headless')  # Run in headless mode
    return webdriver.Firefox(options=options)

def scrape_page(driver, url):
    try:
        driver.get(url)
        # Wait for content to load
        time.sleep(5)
        
        # Get all text content
        return driver.find_element("tag name", "body").text
        
    except Exception as e:
        print(f"Error scraping page: {e}")
        return None

def main():
    print("Starting Firefox in headless mode...")
    driver = setup_driver()
    
    try:
        base_url = "https://www.wantstobehired.com/"
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        output_file = f'webpage_content_{timestamp}.txt'
        
        with open(output_file, 'w', encoding='utf-8') as f:
            for page in range(1, 95):  # 94 pages total
                print(f"\nProcessing page {page}/94")
                
                url = f"{base_url}?page={page}" if page > 1 else base_url
                content = scrape_page(driver, url)
                
                if content:
                    f.write(f"\n{'='*50}\nPAGE {page}\n{'='*50}\n\n")
                    f.write(content)
                    print(f"Content captured from page {page}")
                
                time.sleep(2)  # Be nice to the server
                
        print(f"\nDone! Results saved to {output_file}")
        
    finally:
        driver.quit()
        print("Browser closed.")

if __name__ == "__main__":
    main()
